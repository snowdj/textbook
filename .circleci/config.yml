version: 2.1
jobs:
  deploy:
    docker:
      - image: circleci/python:3.6-stretch
    steps:
      - checkout
      # Add deployment key fingerprint for CircleCI to use for a push
      - add_ssh_keys:
          fingerprints:
            - "25:11:c6:86:6a:aa:66:ed:d9:56:b0:df:51:ca:f4:18"

      - prepare_jekyll_installation

      - run:
          name: Build the website
          command: bundle exec jekyll build

      # Push to the inferentialthinking.github.io repository so it goes live
      - run:
          name: Deploying site using ghp-import
          command: |
            git remote add live_textbook git@github.com:inferentialthinking/inferentialthinking.github.io.git
            pip install ghp-import
            ghp-import -p -f -n -b master -r live_textbook -c www.inferentialthinking.com _site/

  demo_site:
    docker:
      - image: circleci/python:3.6-stretch
    steps:
      # Attach the built html files
      - checkout
      - prepare_jekyll_installation

      - run:
          name: Build the website
          command: bundle exec jekyll build --baseurl /0/html/

      # Tell Circle to store the documentation output in a folder that we can access later
      - store_artifacts:
          path: ./_site/
          destination: html

  page_html:
    docker:
      - image: circleci/python:3.6-stretch
    steps:
      # Get our data and merge with upstream
      - run: sudo apt-get update
      - checkout
      # Update our path
      - run: echo "export PATH=~/.local/bin:$PATH" >> $BASH_ENV
      # Restore cached files to speed things up
      - restore_cache:
          keys:
            - cache-pip

      # Install the packages needed to build our documentation
      # This will depend on your particular package!
      - run: pip install --user -r requirements.txt
      - run: pip install --user -U git+https://github.com/jupyter/jupyter-book.git

      # Cache some files for a speedup in subsequent builds
      - save_cache:
          key: cache-pip
          paths:
            - ~/.cache/pip

      - run:
          name: Build site html
          command: jupyter-book build .

      # Persist the specified paths (see https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs)
      - persist_to_workspace:
          root: .
          paths:
            - ./_build/


# Tell CircleCI to use this workflow when it builds the site
workflows:
  version: 2
  default:
    jobs:
      - page_html
      - demo_site:
          requires:
            - page_html
          filters:
            branches:
              ignore:
                - gh-pages
      - deploy:
          requires:
            - page_html
          filters:
            branches:
              only:
                - gh-pages

commands:
  prepare_jekyll_installation:
    steps:
      # Attach the built html files
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      # Grab the the built html from the last step
      - run:
          name: Copy over built site files
          command: |
            rm -rf ./_build
            cp -r /tmp/workspace/_build ./

      # Grab the the built intermediate files from the last step
      - run:
          name: Copy over built site files
          command: |
            rm -rf _build
            cp -r /tmp/workspace/_build ./      # Install miniconda to test install
      - run:
          name: install miniconda
          command: |
            export MINICONDA=$HOME/miniconda
            echo "export PATH=$MINICONDA/bin:$PATH" >> $BASH_ENV
            source $BASH_ENV
            hash -r
            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
            bash miniconda.sh -b -f -p $MINICONDA
            conda config --set always_yes yes
            conda update conda
            conda info -a
            conda create -n testenv python=3.7.0
            source activate testenv
            rm miniconda.sh

      # Install Ruby/Jekyll dependencies
      - run:
          name: Installing Ruby/Jekyll from conda-forge
          command: conda install -c conda-forge rb-github-pages

      # Build the book's HTML w/ the base_url for CircleCI artifacts
      - run:
          name: Install book Ruby dependencies
          command: |
            bundle install
